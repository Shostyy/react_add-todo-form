{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","findUser","userId","usersFromServer","find","initialTodos","App","defaultTodo","useState","setTodos","hasTitleError","setHasTitleError","hasSelectError","setHasSelectError","userTodo","setUserTodo","handleInputChange","key","value","prevState","Number","onSubmit","event","preventDefault","trim","length","prevTodos","Math","max","handleFormSubmit","type","onChange","target","placeholder","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.528d8f34.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../interfaces/interfaces';\n\ninterface UserProps {\n  user: User\n}\n\nexport const UserInfo: React.FC<UserProps> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Todo } from '../../interfaces/interfaces';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoProps> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('input', {\n        TodoInfo: true,\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import * as React from 'react';\n\nimport { Todo } from '../../interfaces/interfaces';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <>\n      {todos.map((todo) => (\n        <React.Fragment key={todo.id}>\n          <TodoInfo todo={todo} />\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { TodoList } from './components/TodoList';\n\nimport { Todo } from './interfaces/interfaces';\n\nconst findUser = (userId: number) => usersFromServer.find(\n  ({ id }) => id === userId,\n) || null;\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App = () => {\n  const defaultTodo: Todo = {\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  };\n\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectError, setHasSelectError] = useState(false);\n  const [userTodo, setUserTodo] = useState<Todo>(defaultTodo);\n\n  const handleInputChange = (key: string, value: string | number) => {\n    if (key === 'userId') {\n      setHasSelectError(false);\n    }\n\n    if (key === 'title') {\n      setHasTitleError(false);\n    }\n\n    setUserTodo((prevState) => {\n      const updatedUserTodo = {\n        ...prevState,\n        [key]: key === 'userId' ? Number(value) : value,\n      };\n\n      return updatedUserTodo;\n    });\n  };\n\n  const handleFormSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (userTodo.title.trim().length > 0 && userTodo.userId !== 0) {\n      setTodos((prevTodos: Todo[]) => [\n        ...prevTodos,\n        {\n          ...userTodo,\n          id: Math.max(...todos.map(todo => todo.id)) + 1,\n          user: findUser(userTodo.userId),\n        },\n      ]);\n      setUserTodo(defaultTodo);\n    } else {\n      if (userTodo.title.trim().length === 0) {\n        setHasTitleError(true);\n      }\n\n      if (userTodo.userId === 0) {\n        setHasSelectError(true);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        onSubmit={(event: React.ChangeEvent<HTMLFormElement>) => {\n          handleFormSubmit(event);\n        }}\n      >\n\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={userTodo.title}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              handleInputChange('title', event.target.value);\n            }}\n            placeholder=\"Enter a title\"\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userTodo.userId}\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n              handleInputChange('userId', event.target.value);\n            }}\n            required\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => {\n              return (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              );\n            })}\n          </select>\n\n          {hasSelectError\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList\n          todos={todos}\n        />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}